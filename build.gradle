/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.6.3/userguide/java_library_plugin.html
 */

plugins {        
    id 'java-library'    
	id 'findbugs'
	id 'pmd'
}

repositories {
    jcenter()
}

if (project.hasProperty("args")) {
	ext.cmdargs = project.getProperty("args")
} else { 
	ext.cmdargs = ""
}

dependencies {
	implementation 'org.apache.commons:commons-lang3:3.12.0'
	implementation 'commons-io:commons-io:2.11.0'
	
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testImplementation 'org.assertj:assertj-core:3.23.1'
    testImplementation 'org.mockito:mockito-all:1.10.19'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
}

jar {
    manifest {
        attributes(
            "Main-Class": 'com.jobsity.leolira.javachallenge.Bowling'
        )
    }
    
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

task run(type: JavaExec) {
    group = "Execution"
    description = "Run the main class with JavaExecTask"
    classpath = sourceSets.main.runtimeClasspath
    main = "com.jobsity.leolira.javachallenge.Bowling"
    args cmdargs.split()
}

test {
    useJUnitPlatform {
        excludeTags 'INTEGRATION_TESTS'
    }
    testLogging {
        events "passed", "skipped", "failed"
    }
}

task integrationTest(type: Test) {
    useJUnitPlatform {
        includeTags 'INTEGRATION_TESTS'
    }
    testLogging {
        events "passed", "skipped", "failed"
    }
}

findbugs {
    toolVersion = '3.0.1'
    ignoreFailures = false
}

pmd {
    toolVersion = '6.7.0'
    ignoreFailures = false
    ruleSetFiles = files("ruleset.xml")
    ruleSets = []
    rulePriority = 3
}

tasks.withType(FindBugs) {
    reports {
        xml.enabled false
        html.enabled true
    }
}

tasks.withType(Pmd) {
    reports {
        xml.enabled false
        html.enabled true
    }
}

test {
    useJUnitPlatform()
}
